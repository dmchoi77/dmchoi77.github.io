{"version":3,"file":"component---src-templates-post-template-tsx-36ab85b24a9b77594a76.js","mappings":"sPAUA,IAAMA,GAAsB,cAAH,oBAAG,CAAH,4LAenBC,GAAe,cAAH,oBAAG,CAAH,2QAmBZC,GAAQ,cAAH,oBAAG,CAAH,4QAiBLC,GAAW,cAAH,oBAAG,CAAH,0LA+Bd,EAlB2D,YAGxD,IAFDC,EAEC,EAFDA,MACAC,EACC,EADDA,KAIA,OACE,QAACL,EAAD,MACE,QAACC,EAAD,CAAcK,QAJC,kBAAMC,OAAOC,QAAQC,UAKlC,QAAC,IAAD,CAAiBC,KAAMC,EAAAA,QAEzB,QAACT,EAAD,KAAQE,IACR,QAACD,EAAD,OACA,eAAKS,MAAO,CAAEC,UAAW,SAAWR,KCxE1C,IAAMS,GAAkB,cAAH,mBAAG,CAAH,6GAUfC,GAAkB,QAAO,SAACC,GAAD,OAC7B,QAAC,EAAAC,GAAD,UAAiBD,EAAjB,CAAwBJ,MAAO,CAAEM,SAAU,iBADrB,qBAAH,gJA2BrB,EAbmD,YAIhD,IAHDd,EAGC,EAHDA,MACAC,EAEC,EAFDA,KACAc,EACC,EADDA,UAEA,OACE,QAACL,EAAD,MACE,QAACC,EAAD,CAAiBK,MAAOD,EAAWE,IAAI,eACvC,QAAC,EAAD,CAAcjB,MAAOA,EAAOC,KAAMA,MCxCxC,IAAMiB,GAAgB,m+BAoItB,EATyD,YAAqB,IAATC,EAAQ,EAARA,KACnE,OACE,yBACE,QAACD,EAAD,CAAkBE,wBAAyB,CAAEC,OAAQF,O,UC7H3D,IAAMG,GAAc,oLAYdC,GAAQ,0IAsCd,EA3BiD,YAE7C,IADAC,EACD,EADCA,WAGA,OACI,QAACF,EAAD,MACI,QAACC,EAAD,cACA,cAAIf,MAAO,CAAEiB,QAAS,OAAQC,cAAe,QACxCF,EAAWG,KAAI,SAAAC,GAAI,OAChB,QAAC,KAAD,CAAMC,GAAE,cAAgBD,EACpBpB,MAAO,CACHsB,WAAY,UACZC,SAAU,SACVC,YAAa,SACbC,QAAS,WACTC,OAAQ,UACRC,aAAc,QACdC,gBAAiB,yBAEjBR,SC/C5B,IAaMS,GAAiB,yHAoCvB,EA5ByC,WACrC,IAAMC,GAAUC,EAAAA,EAAAA,aAwBhB,OAtBAC,EAAAA,EAAAA,YAAU,WACN,GAAwB,OAApBF,EAAQG,QAAZ,CAEA,IAAMC,EAAgCC,SAASC,cAAc,UAEvDC,EAAuC,CACzCC,IA9BA,gCA+BAC,KA9BC,8BA+BD,aAAc,WACdC,MAAO,UACPC,MAAM,eACNC,YAAa,YACbC,MAAO,QAGXC,OAAOC,QAAQR,GAAYS,SAAQ,YAAmB,IAAjBC,EAAgB,KAAXC,EAAW,KACjDd,EAAWe,aAAaF,EAAKC,MAGjClB,EAAQG,QAAQiB,YAAYhB,MAC7B,KAEI,QAACL,EAAD,CAAmBsB,IAAKrB,KCQnC,EArC2D,YAKvD,IAHqBsB,EAGtB,EAJDC,KACEC,kBAAqBF,MAEXG,EACX,EADDC,SAAYD,KAEZ,EAcIH,EAAM,GAbRK,KACE9C,EAFJ,EAEIA,KAFJ,IAGI+C,YACElE,EAJN,EAIMA,MACAmE,EALN,EAKMA,QACAlE,EANN,EAMMA,KACAuB,EAPN,EAOMA,WAPN,IAQMT,UACqBqD,EAT3B,EASQC,gBAAmBD,gBACnBE,EAVR,EAUQA,UAMR,OACE,QAACC,EAAA,EAAD,CAAUvE,MAAOA,EAAOwE,YAAaL,EAASM,IAAKV,EAAM/C,MAAOsD,IAC9D,QAAC,EAAD,CACEtE,MAAOA,EACPC,KAAMA,EACNc,UAAWqD,KAEb,QAAC,EAAD,CAAajD,KAAMA,KACnB,QAAC,EAAD,CACEK,WAAYA,KACd,QAAC,EAAD","sources":["webpack://my-gatsby-site/./src/components/Post/PostHeadInfo.tsx","webpack://my-gatsby-site/./src/components/Post/PostHead.tsx","webpack://my-gatsby-site/./src/components/Post/PostContent.tsx","webpack://my-gatsby-site/./src/components/Post/PostTag.tsx","webpack://my-gatsby-site/./src/components/Post/CommentWidget.tsx","webpack://my-gatsby-site/./src/templates/post_template.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\n\nexport type PostHeadInfoProps = {\n  title: string\n  date: string\n}\n\nconst PostHeadInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  height: 100%;\n  margin: 50px auto;\n  padding: 60px 0;\n  color: #ffffff;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 15px 20px;\n  }\n`\n\nconst PrevPageIcon = styled.div`\n  display: grid;\n  place-items: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background: #ffffff;\n  color: #000000;\n  font-size: 22px;\n  cursor: pointer;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n\n  @media (max-width: 768px) {\n    width: 30px;\n    height: 30px;\n    font-size: 18px;\n  }\n`\n\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  overflow-wrap: break-word;\n  margin-top: 40px;\n  text-overflow: ellipsis;\n  white-space: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 45px;\n  font-weight: 800;\n\n  @media (max-width: 768px) {\n    font-size: 30px;\n  }\n`\n\nconst PostData = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 15px 0;\n  font-size: 18px;\n  font-weight: 700;\n  @media (max-width: 768px) {\n    align-items: flex-start;\n    font-size: 15px;\n    font-weight: 400;\n  }\n`\n\nconst PostHeadInfo: FunctionComponent<PostHeadInfoProps> = function ({\n  title,\n  date,\n}) {\n  const goBackPage = () => window.history.back()\n\n  return (\n    <PostHeadInfoWrapper>\n      <PrevPageIcon onClick={goBackPage}>\n        <FontAwesomeIcon icon={faArrowLeft} />\n      </PrevPageIcon>\n      <Title>{title}</Title>\n      <PostData />\n      <div style={{ marginTop: \"10px\" }}>{date}</div>\n    </PostHeadInfoWrapper>\n  )\n}\n\nexport default PostHeadInfo","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\nimport PostHeadInfo, { PostHeadInfoProps } from 'components/Post/PostHeadInfo'\n\ntype GatsbyImgProps = {\n  image: IGatsbyImageData\n  alt: string\n  className?: string\n}\n\ntype PostHeadProps = PostHeadInfoProps & {\n  thumbnail: IGatsbyImageData\n}\n\nconst PostHeadWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 400px;\n\n  @media (max-width: 768px) {\n    height: 350px;\n  }\n`\n\nconst BackgroundImage = styled((props: GatsbyImgProps) => (\n  <GatsbyImage {...props} style={{ position: 'absolute' }} />\n))`\n  z-index: -1;\n  width: 100%;\n  height: 400px;\n  object-fit: cover;\n  filter: brightness(0.25);\n\n  @media (max-width: 768px) {\n    height: 300px;\n  }\n`\n\nconst PostHead: FunctionComponent<PostHeadProps> = function ({\n  title,\n  date,\n  thumbnail,\n}) {\n  return (\n    <PostHeadWrapper>\n      <BackgroundImage image={thumbnail} alt=\"thumbnail\" />\n      <PostHeadInfo title={title} date={date} />\n    </PostHeadWrapper>\n  )\n}\n\nexport default PostHead","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\n\ninterface PostContentProps {\n  html: string\n}\n\nconst MarkdownRenderer = styled.div`\n  // Renderer Style\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  margin: 0 auto;\n  padding: 80px 0 30px;\n  word-break: break-all;\n  \n  // Markdown Style\n  line-height: 1.6;\n  font-size: 16px;\n  font-weight: 400;\n\n  // Apply Padding Attribute to All Elements\n  p {\n    padding: 3px 0;\n  }\n\n  // Adjust Heading Element Style\n  h1,\n  h2,\n  h3 {\n    font-weight: 800;\n    margin-bottom: 30px;\n  }\n\n  * + h1,\n  * + h2,\n  * + h3 {\n    margin-top: 40px;\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n  }\n\n  h1 {\n    font-size: 30px;\n  }\n\n  h2 {\n    font-size: 25px;\n  }\n\n  h3 {\n    font-size: 20px;\n  }\n\n  // Adjust Quotation Element Style\n  blockquote {\n    margin: 30px 0;\n    padding: 5px 15px;\n    border-left: 2px solid #000000;\n    font-weight: 800;\n  }\n\n  // Adjust List Element Style\n  ol,\n  ul {\n    margin-left: 20px;\n    padding: 30px 0;\n  }\n\n  // Adjust Horizontal Rule style\n  hr {\n    border: 1px solid #000000;\n    margin: 100px 0;\n  }\n\n  // Adjust Link Element Style\n  a {\n    color: #4263eb;\n    text-decoration: underline;\n  }\n\n  // Adjust Code Style\n  pre[class*='language-'] {\n    margin: 30px 0;\n    padding: 15px;\n    font-size: 15px;\n\n    ::-webkit-scrollbar-thumb {\n      background: rgba(255, 255, 255, 0.5);\n      border-radius: 3px;\n    }\n  }\n\n  code[class*='language-'],\n  pre[class*='language-'] {\n    tab-size: 2;\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 20px 20px;\n    line-height: 1.6;\n    font-size: 14px;\n\n    h1 {\n      font-size: 23px;\n    }\n\n    h2 {\n      font-size: 20px;\n    }\n\n    h3 {\n      font-size: 17px;\n    }\n\n    img {\n      width: 100%;\n    }\n\n    hr {\n      margin: 50px 0;\n    }\n  }\n`\n\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\n  return (\n    <>\n      <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />\n    </>\n  )\n\n}\n\nexport default PostContent","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\nexport type PostTagProps = {\n    categories: string[]\n}\n\nconst PostTagWrapper = styled.div`\n display: flex;\n margin: 0 auto;\n width: 768px;\n flex-direction: column;\n\n @media (max-width: 768px) {\n    width: 100%;\n    padding: 20px 20px;\n }\n`\n\nconst TagTitle = styled.div`\n margin-bottom : 30px;\n font-size : 20px;\n\n @media (max-width: 768px) {\n    font-size : 16px;\n }\n\n`\n\n\nconst PostTag: FunctionComponent<PostTagProps> = function ({\n    categories\n}) {\n\n    return (\n        <PostTagWrapper>\n            <TagTitle>Tags</TagTitle>\n            <ul style={{ display: \"flex\", flexDirection: \"row\" }}>\n                {categories.map(name =>\n                    <Link to={`/?category=${name}`}\n                        style={{\n                            fontWeight: \"lighter\",\n                            fontSize: \"0.8rem\",\n                            marginRight: \"1.1rem\",\n                            padding: \"4px 15px\",\n                            cursor: \"pointer\",\n                            borderRadius: \"150px\",\n                            backgroundColor: \"rgb(255 194 9 / 94%)\"\n\n                        }}>{name}</Link>)\n                }\n            </ul>\n\n        </PostTagWrapper>\n    )\n}\n\nexport default PostTag","import React, { createRef, FunctionComponent, useEffect } from 'react'\nimport styled from '@emotion/styled'\n\nconst src = 'https://utteranc.es/client.js'\nconst repo = 'dmchoi77/dmchoi77.github.io'\n\ntype UtterancesAttributesType = {\n    src: string\n    repo: string\n    'issue-term': string\n    label: string\n    theme: string\n    crossorigin: string\n    async: string\n};\n\nconst UtterancesWrapper = styled.div`\n  padding-top : 40px;\n\n  @media (max-width: 1140px) {\n    padding: 0 20px;\n  }\n`\n\nconst CommentWidget: FunctionComponent = function () {\n    const element = createRef<HTMLDivElement>()\n\n    useEffect(() => {\n        if (element.current === null) return\n\n        const utterances: HTMLScriptElement = document.createElement('script')\n\n        const attributes: UtterancesAttributesType = {\n            src,\n            repo,\n            'issue-term': 'pathname',\n            label: 'Comment',\n            theme: `github-light`,\n            crossorigin: 'anonymous',\n            async: 'true',\n        }\n\n        Object.entries(attributes).forEach(([key, value]) => {\n            utterances.setAttribute(key, value)\n        })\n\n        element.current.appendChild(utterances)\n    }, [])\n\n    return <UtterancesWrapper ref={element} />\n}\n\nexport default CommentWidget","import React, { FunctionComponent } from 'react'\nimport { graphql } from 'gatsby'\nimport Template from 'components/Common/Template'\nimport PostHead from 'components/Post/PostHead'\nimport { PostPageItemType } from 'types/PostItem.types' // 바로 아래에서 정의할 것입니다\nimport PostContent from 'components/Post/PostContent'\nimport PostTag from 'components/Post/PostTag'\nimport CommentWidget from 'components/Post/CommentWidget'\n\ntype PostTemplateProps = {\n  data: {\n    allMarkdownRemark: {\n      edges: PostPageItemType[]\n    }\n  }\n  location: {\n    href: string\n  }\n}\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n  location: { href },\n}) {\n  const {\n    node: {\n      html,\n      frontmatter: {\n        title,\n        summary,\n        date,\n        categories,\n        thumbnail: {\n          childImageSharp: { gatsbyImageData },\n          publicURL\n        },\n      },\n    },\n  } = edges[0]\n\n  return (\n    <Template title={title} description={summary} url={href} image={publicURL}>\n      <PostHead\n        title={title}\n        date={date}\n        thumbnail={gatsbyImageData}\n      />\n      <PostContent html={html} />\n      <PostTag\n        categories={categories} />\n      <CommentWidget />\n    </Template>\n  )\n}\n\nexport default PostTemplate\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY년 MM월 DD일\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`"],"names":["PostHeadInfoWrapper","PrevPageIcon","Title","PostData","title","date","onClick","window","history","back","icon","faArrowLeft","style","marginTop","PostHeadWrapper","BackgroundImage","props","G","position","thumbnail","image","alt","MarkdownRenderer","html","dangerouslySetInnerHTML","__html","PostTagWrapper","TagTitle","categories","display","flexDirection","map","name","to","fontWeight","fontSize","marginRight","padding","cursor","borderRadius","backgroundColor","UtterancesWrapper","element","createRef","useEffect","current","utterances","document","createElement","attributes","src","repo","label","theme","crossorigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","ref","edges","data","allMarkdownRemark","href","location","node","frontmatter","summary","gatsbyImageData","childImageSharp","publicURL","Template","description","url"],"sourceRoot":""}